# auto-converted from Notepad_plus_msgs.h
package Win32::Mechanize::NotepadPlusPlus::__npp_msgs;



unless(defined(&NOTEPAD_PLUS_MSGS_H)) {
    eval 'sub NOTEPAD_PLUS_MSGS_H () {1;}' unless defined(&NOTEPAD_PLUS_MSGS_H);
    eval 'sub WM_USER () { 0x400; }' unless defined(&WM_USER);

    eval("sub L_TEXT () { 0; }") unless defined(&L_TEXT);
    eval("sub L_PHP () { 1; }") unless defined(&L_PHP);
    eval("sub L_C () { 2; }") unless defined(&L_C);
    eval("sub L_CPP () { 3; }") unless defined(&L_CPP);
    eval("sub L_CS () { 4; }") unless defined(&L_CS);
    eval("sub L_OBJC () { 5; }") unless defined(&L_OBJC);
    eval("sub L_JAVA () { 6; }") unless defined(&L_JAVA);
    eval("sub L_RC () { 7; }") unless defined(&L_RC);
    eval("sub L_HTML () { 8; }") unless defined(&L_HTML);
    eval("sub L_XML () { 9; }") unless defined(&L_XML);
    eval("sub L_MAKEFILE () { 10; }") unless defined(&L_MAKEFILE);
    eval("sub L_PASCAL () { 11; }") unless defined(&L_PASCAL);
    eval("sub L_BATCH () { 12; }") unless defined(&L_BATCH);
    eval("sub L_INI () { 13; }") unless defined(&L_INI);
    eval("sub L_ASCII () { 14; }") unless defined(&L_ASCII);
    eval("sub L_USER () { 15; }") unless defined(&L_USER);
    eval("sub L_ASP () { 16; }") unless defined(&L_ASP);
    eval("sub L_SQL () { 17; }") unless defined(&L_SQL);
    eval("sub L_VB () { 18; }") unless defined(&L_VB);
    eval("sub L_JS () { 19; }") unless defined(&L_JS);
    eval("sub L_CSS () { 20; }") unless defined(&L_CSS);
    eval("sub L_PERL () { 21; }") unless defined(&L_PERL);
    eval("sub L_PYTHON () { 22; }") unless defined(&L_PYTHON);
    eval("sub L_LUA () { 23; }") unless defined(&L_LUA);
    eval("sub L_TEX () { 24; }") unless defined(&L_TEX);
    eval("sub L_FORTRAN () { 25; }") unless defined(&L_FORTRAN);
    eval("sub L_BASH () { 26; }") unless defined(&L_BASH);
    eval("sub L_FLASH () { 27; }") unless defined(&L_FLASH);
    eval("sub L_NSIS () { 28; }") unless defined(&L_NSIS);
    eval("sub L_TCL () { 29; }") unless defined(&L_TCL);
    eval("sub L_LISP () { 30; }") unless defined(&L_LISP);
    eval("sub L_SCHEME () { 31; }") unless defined(&L_SCHEME);
    eval("sub L_ASM () { 32; }") unless defined(&L_ASM);
    eval("sub L_DIFF () { 33; }") unless defined(&L_DIFF);
    eval("sub L_PROPS () { 34; }") unless defined(&L_PROPS);
    eval("sub L_PS () { 35; }") unless defined(&L_PS);
    eval("sub L_RUBY () { 36; }") unless defined(&L_RUBY);
    eval("sub L_SMALLTALK () { 37; }") unless defined(&L_SMALLTALK);
    eval("sub L_VHDL () { 38; }") unless defined(&L_VHDL);
    eval("sub L_KIX () { 39; }") unless defined(&L_KIX);
    eval("sub L_AU3 () { 40; }") unless defined(&L_AU3);
    eval("sub L_CAML () { 41; }") unless defined(&L_CAML);
    eval("sub L_ADA () { 42; }") unless defined(&L_ADA);
    eval("sub L_VERILOG () { 43; }") unless defined(&L_VERILOG);
    eval("sub L_MATLAB () { 44; }") unless defined(&L_MATLAB);
    eval("sub L_HASKELL () { 45; }") unless defined(&L_HASKELL);
    eval("sub L_INNO () { 46; }") unless defined(&L_INNO);
    eval("sub L_SEARCHRESULT () { 47; }") unless defined(&L_SEARCHRESULT);
    eval("sub L_CMAKE () { 48; }") unless defined(&L_CMAKE);
    eval("sub L_YAML () { 49; }") unless defined(&L_YAML);
    eval("sub L_COBOL () { 50; }") unless defined(&L_COBOL);
    eval("sub L_GUI4CLI () { 51; }") unless defined(&L_GUI4CLI);
    eval("sub L_D () { 52; }") unless defined(&L_D);
    eval("sub L_POWERSHELL () { 53; }") unless defined(&L_POWERSHELL);
    eval("sub L_R () { 54; }") unless defined(&L_R);
    eval("sub L_JSP () { 55; }") unless defined(&L_JSP);
    eval("sub L_COFFEESCRIPT () { 56; }") unless defined(&L_COFFEESCRIPT);
    eval("sub L_JSON () { 57; }") unless defined(&L_JSON);
    eval("sub L_JAVASCRIPT () { 58; }") unless defined(&L_JAVASCRIPT);
    eval("sub L_FORTRAN_77 () { 59; }") unless defined(&L_FORTRAN_77);
    eval("sub L_BAANC () { 60; }") unless defined(&L_BAANC);
    eval("sub L_SREC () { 61; }") unless defined(&L_SREC);
    eval("sub L_IHEX () { 62; }") unless defined(&L_IHEX);
    eval("sub L_TEHEX () { 63; }") unless defined(&L_TEHEX);
    eval("sub L_SWIFT () { 64; }") unless defined(&L_SWIFT);
    eval("sub L_ASN1 () { 65; }") unless defined(&L_ASN1);
    eval("sub L_AVS () { 66; }") unless defined(&L_AVS);
    eval("sub L_BLITZBASIC () { 67; }") unless defined(&L_BLITZBASIC);
    eval("sub L_PUREBASIC () { 68; }") unless defined(&L_PUREBASIC);
    eval("sub L_FREEBASIC () { 69; }") unless defined(&L_FREEBASIC);
    eval("sub L_CSOUND () { 70; }") unless defined(&L_CSOUND);
    eval("sub L_ERLANG () { 71; }") unless defined(&L_ERLANG);
    eval("sub L_ESCRIPT () { 72; }") unless defined(&L_ESCRIPT);
    eval("sub L_FORTH () { 73; }") unless defined(&L_FORTH);
    eval("sub L_LATEX () { 74; }") unless defined(&L_LATEX);
    eval("sub L_MMIXAL () { 75; }") unless defined(&L_MMIXAL);
    eval("sub L_NIMROD () { 76; }") unless defined(&L_NIMROD);
    eval("sub L_NNCRONTAB () { 77; }") unless defined(&L_NNCRONTAB);
    eval("sub L_OSCRIPT () { 78; }") unless defined(&L_OSCRIPT);
    eval("sub L_REBOL () { 79; }") unless defined(&L_REBOL);
    eval("sub L_REGISTRY () { 80; }") unless defined(&L_REGISTRY);
    eval("sub L_RUST () { 81; }") unless defined(&L_RUST);
    eval("sub L_SPICE () { 82; }") unless defined(&L_SPICE);
    eval("sub L_TXT2TAGS () { 83; }") unless defined(&L_TXT2TAGS);
    eval("sub L_VISUALPROLOG () { 84; }") unless defined(&L_VISUALPROLOG);
    eval("sub L_EXTERNAL () { 85; }") unless defined(&L_EXTERNAL);
    eval("sub WV_UNKNOWN () { 0; }") unless defined(&WV_UNKNOWN);
    eval("sub WV_WIN32S () { 1; }") unless defined(&WV_WIN32S);
    eval("sub WV_95 () { 2; }") unless defined(&WV_95);
    eval("sub WV_98 () { 3; }") unless defined(&WV_98);
    eval("sub WV_ME () { 4; }") unless defined(&WV_ME);
    eval("sub WV_NT () { 5; }") unless defined(&WV_NT);
    eval("sub WV_W2K () { 6; }") unless defined(&WV_W2K);
    eval("sub WV_XP () { 7; }") unless defined(&WV_XP);
    eval("sub WV_S2003 () { 8; }") unless defined(&WV_S2003);
    eval("sub WV_XPX64 () { 9; }") unless defined(&WV_XPX64);
    eval("sub WV_VISTA () { 10; }") unless defined(&WV_VISTA);
    eval("sub WV_WIN7 () { 11; }") unless defined(&WV_WIN7);
    eval("sub WV_WIN8 () { 12; }") unless defined(&WV_WIN8);
    eval("sub WV_WIN81 () { 13; }") unless defined(&WV_WIN81);
    eval("sub WV_WIN10 () { 14; }") unless defined(&WV_WIN10);
    eval("sub PF_UNKNOWN () { 0; }") unless defined(&PF_UNKNOWN);
    eval("sub PF_X86 () { 1; }") unless defined(&PF_X86);
    eval("sub PF_X64 () { 2; }") unless defined(&PF_X64);
    eval("sub PF_IA64 () { 3; }") unless defined(&PF_IA64);
    eval 'sub NPPMSG () {( &WM_USER + 1000);}' unless defined(&NPPMSG);
    eval 'sub NPPM_GETCURRENTSCINTILLA () {( &NPPMSG + 4);}' unless defined(&NPPM_GETCURRENTSCINTILLA);
    eval 'sub NPPM_GETCURRENTLANGTYPE () {( &NPPMSG + 5);}' unless defined(&NPPM_GETCURRENTLANGTYPE);
    eval 'sub NPPM_SETCURRENTLANGTYPE () {( &NPPMSG + 6);}' unless defined(&NPPM_SETCURRENTLANGTYPE);
    eval 'sub NPPM_GETNBOPENFILES () {( &NPPMSG + 7);}' unless defined(&NPPM_GETNBOPENFILES);
    eval 'sub ALL_OPEN_FILES () {0;}' unless defined(&ALL_OPEN_FILES);
    eval 'sub PRIMARY_VIEW () {1;}' unless defined(&PRIMARY_VIEW);
    eval 'sub SECOND_VIEW () {2;}' unless defined(&SECOND_VIEW);
    eval 'sub NPPM_GETOPENFILENAMES () {( &NPPMSG + 8);}' unless defined(&NPPM_GETOPENFILENAMES);
    eval 'sub NPPM_MODELESSDIALOG () {( &NPPMSG + 12);}' unless defined(&NPPM_MODELESSDIALOG);
    eval 'sub MODELESSDIALOGADD () {0;}' unless defined(&MODELESSDIALOGADD);
    eval 'sub MODELESSDIALOGREMOVE () {1;}' unless defined(&MODELESSDIALOGREMOVE);
    eval 'sub NPPM_GETNBSESSIONFILES () {( &NPPMSG + 13);}' unless defined(&NPPM_GETNBSESSIONFILES);
    eval 'sub NPPM_GETSESSIONFILES () {( &NPPMSG + 14);}' unless defined(&NPPM_GETSESSIONFILES);
    eval 'sub NPPM_SAVESESSION () {( &NPPMSG + 15);}' unless defined(&NPPM_SAVESESSION);
    eval 'sub NPPM_SAVECURRENTSESSION () {( &NPPMSG + 16);}' unless defined(&NPPM_SAVECURRENTSESSION);
    eval 'sub NPPM_GETOPENFILENAMESPRIMARY () {( &NPPMSG + 17);}' unless defined(&NPPM_GETOPENFILENAMESPRIMARY);
    eval 'sub NPPM_GETOPENFILENAMESSECOND () {( &NPPMSG + 18);}' unless defined(&NPPM_GETOPENFILENAMESSECOND);
    eval 'sub NPPM_CREATESCINTILLAHANDLE () {( &NPPMSG + 20);}' unless defined(&NPPM_CREATESCINTILLAHANDLE);
    eval 'sub NPPM_DESTROYSCINTILLAHANDLE () {( &NPPMSG + 21);}' unless defined(&NPPM_DESTROYSCINTILLAHANDLE);
    eval 'sub NPPM_GETNBUSERLANG () {( &NPPMSG + 22);}' unless defined(&NPPM_GETNBUSERLANG);
    eval 'sub NPPM_GETCURRENTDOCINDEX () {( &NPPMSG + 23);}' unless defined(&NPPM_GETCURRENTDOCINDEX);
    eval 'sub MAIN_VIEW () {0;}' unless defined(&MAIN_VIEW);
    eval 'sub SUB_VIEW () {1;}' unless defined(&SUB_VIEW);
    eval 'sub NPPM_SETSTATUSBAR () {( &NPPMSG + 24);}' unless defined(&NPPM_SETSTATUSBAR);
    eval 'sub STATUSBAR_DOC_TYPE () {0;}' unless defined(&STATUSBAR_DOC_TYPE);
    eval 'sub STATUSBAR_DOC_SIZE () {1;}' unless defined(&STATUSBAR_DOC_SIZE);
    eval 'sub STATUSBAR_CUR_POS () {2;}' unless defined(&STATUSBAR_CUR_POS);
    eval 'sub STATUSBAR_EOF_FORMAT () {3;}' unless defined(&STATUSBAR_EOF_FORMAT);
    eval 'sub STATUSBAR_UNICODE_TYPE () {4;}' unless defined(&STATUSBAR_UNICODE_TYPE);
    eval 'sub STATUSBAR_TYPING_MODE () {5;}' unless defined(&STATUSBAR_TYPING_MODE);
    eval 'sub NPPM_GETMENUHANDLE () {( &NPPMSG + 25);}' unless defined(&NPPM_GETMENUHANDLE);
    eval 'sub NPPPLUGINMENU () {0;}' unless defined(&NPPPLUGINMENU);
    eval 'sub NPPMAINMENU () {1;}' unless defined(&NPPMAINMENU);
    eval 'sub NPPM_ENCODESCI () {( &NPPMSG + 26);}' unless defined(&NPPM_ENCODESCI);
    eval 'sub NPPM_DECODESCI () {( &NPPMSG + 27);}' unless defined(&NPPM_DECODESCI);
    eval 'sub NPPM_ACTIVATEDOC () {( &NPPMSG + 28);}' unless defined(&NPPM_ACTIVATEDOC);
    eval 'sub NPPM_LAUNCHFINDINFILESDLG () {( &NPPMSG + 29);}' unless defined(&NPPM_LAUNCHFINDINFILESDLG);
    eval 'sub NPPM_DMMSHOW () {( &NPPMSG + 30);}' unless defined(&NPPM_DMMSHOW);
    eval 'sub NPPM_DMMHIDE () {( &NPPMSG + 31);}' unless defined(&NPPM_DMMHIDE);
    eval 'sub NPPM_DMMUPDATEDISPINFO () {( &NPPMSG + 32);}' unless defined(&NPPM_DMMUPDATEDISPINFO);
    eval 'sub NPPM_DMMREGASDCKDLG () {( &NPPMSG + 33);}' unless defined(&NPPM_DMMREGASDCKDLG);
    eval 'sub NPPM_LOADSESSION () {( &NPPMSG + 34);}' unless defined(&NPPM_LOADSESSION);
    eval 'sub NPPM_DMMVIEWOTHERTAB () {( &NPPMSG + 35);}' unless defined(&NPPM_DMMVIEWOTHERTAB);
    eval 'sub NPPM_RELOADFILE () {( &NPPMSG + 36);}' unless defined(&NPPM_RELOADFILE);
    eval 'sub NPPM_SWITCHTOFILE () {( &NPPMSG + 37);}' unless defined(&NPPM_SWITCHTOFILE);
    eval 'sub NPPM_SAVECURRENTFILE () {( &NPPMSG + 38);}' unless defined(&NPPM_SAVECURRENTFILE);
    eval 'sub NPPM_SAVEALLFILES () {( &NPPMSG + 39);}' unless defined(&NPPM_SAVEALLFILES);
    eval 'sub NPPM_SETMENUITEMCHECK () {( &NPPMSG + 40);}' unless defined(&NPPM_SETMENUITEMCHECK);
    eval 'sub NPPM_ADDTOOLBARICON () {( &NPPMSG + 41);}' unless defined(&NPPM_ADDTOOLBARICON);
    eval 'sub NPPM_GETWINDOWSVERSION () {( &NPPMSG + 42);}' unless defined(&NPPM_GETWINDOWSVERSION);
    eval 'sub NPPM_DMMGETPLUGINHWNDBYNAME () {( &NPPMSG + 43);}' unless defined(&NPPM_DMMGETPLUGINHWNDBYNAME);
    eval 'sub NPPM_MAKECURRENTBUFFERDIRTY () {( &NPPMSG + 44);}' unless defined(&NPPM_MAKECURRENTBUFFERDIRTY);
    eval 'sub NPPM_GETENABLETHEMETEXTUREFUNC () {( &NPPMSG + 45);}' unless defined(&NPPM_GETENABLETHEMETEXTUREFUNC);
    eval 'sub NPPM_GETPLUGINSCONFIGDIR () {( &NPPMSG + 46);}' unless defined(&NPPM_GETPLUGINSCONFIGDIR);
    eval 'sub NPPM_MSGTOPLUGIN () {( &NPPMSG + 47);}' unless defined(&NPPM_MSGTOPLUGIN);
    eval 'sub NPPM_MENUCOMMAND () {( &NPPMSG + 48);}' unless defined(&NPPM_MENUCOMMAND);
    eval 'sub NPPM_TRIGGERTABBARCONTEXTMENU () {( &NPPMSG + 49);}' unless defined(&NPPM_TRIGGERTABBARCONTEXTMENU);
    eval 'sub NPPM_GETNPPVERSION () {( &NPPMSG + 50);}' unless defined(&NPPM_GETNPPVERSION);
    eval 'sub NPPM_HIDETABBAR () {( &NPPMSG + 51);}' unless defined(&NPPM_HIDETABBAR);
    eval 'sub NPPM_ISTABBARHIDDEN () {( &NPPMSG + 52);}' unless defined(&NPPM_ISTABBARHIDDEN);
    eval 'sub NPPM_GETPOSFROMBUFFERID () {( &NPPMSG + 57);}' unless defined(&NPPM_GETPOSFROMBUFFERID);
    eval 'sub NPPM_GETFULLPATHFROMBUFFERID () {( &NPPMSG + 58);}' unless defined(&NPPM_GETFULLPATHFROMBUFFERID);
    eval 'sub NPPM_GETBUFFERIDFROMPOS () {( &NPPMSG + 59);}' unless defined(&NPPM_GETBUFFERIDFROMPOS);
    eval 'sub NPPM_GETCURRENTBUFFERID () {( &NPPMSG + 60);}' unless defined(&NPPM_GETCURRENTBUFFERID);
    eval 'sub NPPM_RELOADBUFFERID () {( &NPPMSG + 61);}' unless defined(&NPPM_RELOADBUFFERID);
    eval 'sub NPPM_GETBUFFERLANGTYPE () {( &NPPMSG + 64);}' unless defined(&NPPM_GETBUFFERLANGTYPE);
    eval 'sub NPPM_SETBUFFERLANGTYPE () {( &NPPMSG + 65);}' unless defined(&NPPM_SETBUFFERLANGTYPE);
    eval 'sub NPPM_GETBUFFERENCODING () {( &NPPMSG + 66);}' unless defined(&NPPM_GETBUFFERENCODING);
    eval 'sub NPPM_SETBUFFERENCODING () {( &NPPMSG + 67);}' unless defined(&NPPM_SETBUFFERENCODING);
    eval 'sub NPPM_GETBUFFERFORMAT () {( &NPPMSG + 68);}' unless defined(&NPPM_GETBUFFERFORMAT);
    eval 'sub NPPM_SETBUFFERFORMAT () {( &NPPMSG + 69);}' unless defined(&NPPM_SETBUFFERFORMAT);
    eval 'sub NPPM_HIDETOOLBAR () {( &NPPMSG + 70);}' unless defined(&NPPM_HIDETOOLBAR);
    eval 'sub NPPM_ISTOOLBARHIDDEN () {( &NPPMSG + 71);}' unless defined(&NPPM_ISTOOLBARHIDDEN);
    eval 'sub NPPM_HIDEMENU () {( &NPPMSG + 72);}' unless defined(&NPPM_HIDEMENU);
    eval 'sub NPPM_ISMENUHIDDEN () {( &NPPMSG + 73);}' unless defined(&NPPM_ISMENUHIDDEN);
    eval 'sub NPPM_HIDESTATUSBAR () {( &NPPMSG + 74);}' unless defined(&NPPM_HIDESTATUSBAR);
    eval 'sub NPPM_ISSTATUSBARHIDDEN () {( &NPPMSG + 75);}' unless defined(&NPPM_ISSTATUSBARHIDDEN);
    eval 'sub NPPM_GETSHORTCUTBYCMDID () {( &NPPMSG + 76);}' unless defined(&NPPM_GETSHORTCUTBYCMDID);
    eval 'sub NPPM_DOOPEN () {( &NPPMSG + 77);}' unless defined(&NPPM_DOOPEN);
    eval 'sub NPPM_SAVECURRENTFILEAS () {( &NPPMSG + 78);}' unless defined(&NPPM_SAVECURRENTFILEAS);
    eval 'sub NPPM_GETCURRENTNATIVELANGENCODING () {( &NPPMSG + 79);}' unless defined(&NPPM_GETCURRENTNATIVELANGENCODING);
    eval 'sub NPPM_ALLOCATESUPPORTED () {( &NPPMSG + 80);}' unless defined(&NPPM_ALLOCATESUPPORTED);
    eval 'sub NPPM_ALLOCATECMDID () {( &NPPMSG + 81);}' unless defined(&NPPM_ALLOCATECMDID);
    eval 'sub NPPM_ALLOCATEMARKER () {( &NPPMSG + 82);}' unless defined(&NPPM_ALLOCATEMARKER);
    eval 'sub NPPM_GETLANGUAGENAME () {( &NPPMSG + 83);}' unless defined(&NPPM_GETLANGUAGENAME);
    eval 'sub NPPM_GETLANGUAGEDESC () {( &NPPMSG + 84);}' unless defined(&NPPM_GETLANGUAGEDESC);
    eval 'sub NPPM_SHOWDOCSWITCHER () {( &NPPMSG + 85);}' unless defined(&NPPM_SHOWDOCSWITCHER);
    eval 'sub NPPM_ISDOCSWITCHERSHOWN () {( &NPPMSG + 86);}' unless defined(&NPPM_ISDOCSWITCHERSHOWN);
    eval 'sub NPPM_GETAPPDATAPLUGINSALLOWED () {( &NPPMSG + 87);}' unless defined(&NPPM_GETAPPDATAPLUGINSALLOWED);
    eval 'sub NPPM_GETCURRENTVIEW () {( &NPPMSG + 88);}' unless defined(&NPPM_GETCURRENTVIEW);
    eval 'sub NPPM_DOCSWITCHERDISABLECOLUMN () {( &NPPMSG + 89);}' unless defined(&NPPM_DOCSWITCHERDISABLECOLUMN);
    eval 'sub NPPM_GETEDITORDEFAULTFOREGROUNDCOLOR () {( &NPPMSG + 90);}' unless defined(&NPPM_GETEDITORDEFAULTFOREGROUNDCOLOR);
    eval 'sub NPPM_GETEDITORDEFAULTBACKGROUNDCOLOR () {( &NPPMSG + 91);}' unless defined(&NPPM_GETEDITORDEFAULTBACKGROUNDCOLOR);
    eval 'sub NPPM_SETSMOOTHFONT () {( &NPPMSG + 92);}' unless defined(&NPPM_SETSMOOTHFONT);
    eval 'sub NPPM_SETEDITORBORDEREDGE () {( &NPPMSG + 93);}' unless defined(&NPPM_SETEDITORBORDEREDGE);
    eval 'sub NPPM_SAVEFILE () {( &NPPMSG + 94);}' unless defined(&NPPM_SAVEFILE);
    eval 'sub NPPM_DISABLEAUTOUPDATE () {( &NPPMSG + 95);}' unless defined(&NPPM_DISABLEAUTOUPDATE);
    eval 'sub NPPM_REMOVESHORTCUTBYCMDID () {( &NPPMSG + 96);}' unless defined(&NPPM_REMOVESHORTCUTBYCMDID);
    eval 'sub NPPM_GETPLUGINHOMEPATH () {( &NPPMSG + 97);}' unless defined(&NPPM_GETPLUGINHOMEPATH);
    eval 'sub RUNCOMMAND_USER () {( &WM_USER + 3000);}' unless defined(&RUNCOMMAND_USER);
    eval 'sub NPPM_GETFULLCURRENTPATH () {( &RUNCOMMAND_USER +  &FULL_CURRENT_PATH);}' unless defined(&NPPM_GETFULLCURRENTPATH);
    eval 'sub NPPM_GETCURRENTDIRECTORY () {( &RUNCOMMAND_USER +  &CURRENT_DIRECTORY);}' unless defined(&NPPM_GETCURRENTDIRECTORY);
    eval 'sub NPPM_GETFILENAME () {( &RUNCOMMAND_USER +  &FILE_NAME);}' unless defined(&NPPM_GETFILENAME);
    eval 'sub NPPM_GETNAMEPART () {( &RUNCOMMAND_USER +  &NAME_PART);}' unless defined(&NPPM_GETNAMEPART);
    eval 'sub NPPM_GETEXTPART () {( &RUNCOMMAND_USER +  &EXT_PART);}' unless defined(&NPPM_GETEXTPART);
    eval 'sub NPPM_GETCURRENTWORD () {( &RUNCOMMAND_USER +  &CURRENT_WORD);}' unless defined(&NPPM_GETCURRENTWORD);
    eval 'sub NPPM_GETNPPDIRECTORY () {( &RUNCOMMAND_USER +  &NPP_DIRECTORY);}' unless defined(&NPPM_GETNPPDIRECTORY);
    eval 'sub NPPM_GETFILENAMEATCURSOR () {( &RUNCOMMAND_USER +  &GETFILENAMEATCURSOR);}' unless defined(&NPPM_GETFILENAMEATCURSOR);
    eval 'sub NPPM_GETCURRENTLINE () {( &RUNCOMMAND_USER +  &CURRENT_LINE);}' unless defined(&NPPM_GETCURRENTLINE);
    eval 'sub NPPM_GETCURRENTCOLUMN () {( &RUNCOMMAND_USER +  &CURRENT_COLUMN);}' unless defined(&NPPM_GETCURRENTCOLUMN);
    eval 'sub NPPM_GETNPPFULLFILEPATH () {( &RUNCOMMAND_USER +  &NPP_FULL_FILE_PATH);}' unless defined(&NPPM_GETNPPFULLFILEPATH);
    eval 'sub VAR_NOT_RECOGNIZED () {0;}' unless defined(&VAR_NOT_RECOGNIZED);
    eval 'sub FULL_CURRENT_PATH () {1;}' unless defined(&FULL_CURRENT_PATH);
    eval 'sub CURRENT_DIRECTORY () {2;}' unless defined(&CURRENT_DIRECTORY);
    eval 'sub FILE_NAME () {3;}' unless defined(&FILE_NAME);
    eval 'sub NAME_PART () {4;}' unless defined(&NAME_PART);
    eval 'sub EXT_PART () {5;}' unless defined(&EXT_PART);
    eval 'sub CURRENT_WORD () {6;}' unless defined(&CURRENT_WORD);
    eval 'sub NPP_DIRECTORY () {7;}' unless defined(&NPP_DIRECTORY);
    eval 'sub CURRENT_LINE () {8;}' unless defined(&CURRENT_LINE);
    eval 'sub CURRENT_COLUMN () {9;}' unless defined(&CURRENT_COLUMN);
    eval 'sub NPP_FULL_FILE_PATH () {10;}' unless defined(&NPP_FULL_FILE_PATH);
    eval 'sub GETFILENAMEATCURSOR () {11;}' unless defined(&GETFILENAMEATCURSOR);
    eval 'sub NPPN_FIRST () {1000;}' unless defined(&NPPN_FIRST);
    eval 'sub NPPN_READY () {( &NPPN_FIRST + 1);}' unless defined(&NPPN_READY);
    eval 'sub NPPN_TBMODIFICATION () {( &NPPN_FIRST + 2);}' unless defined(&NPPN_TBMODIFICATION);
    eval 'sub NPPN_FILEBEFORECLOSE () {( &NPPN_FIRST + 3);}' unless defined(&NPPN_FILEBEFORECLOSE);
    eval 'sub NPPN_FILEOPENED () {( &NPPN_FIRST + 4);}' unless defined(&NPPN_FILEOPENED);
    eval 'sub NPPN_FILECLOSED () {( &NPPN_FIRST + 5);}' unless defined(&NPPN_FILECLOSED);
    eval 'sub NPPN_FILEBEFOREOPEN () {( &NPPN_FIRST + 6);}' unless defined(&NPPN_FILEBEFOREOPEN);
    eval 'sub NPPN_FILEBEFORESAVE () {( &NPPN_FIRST + 7);}' unless defined(&NPPN_FILEBEFORESAVE);
    eval 'sub NPPN_FILESAVED () {( &NPPN_FIRST + 8);}' unless defined(&NPPN_FILESAVED);
    eval 'sub NPPN_SHUTDOWN () {( &NPPN_FIRST + 9);}' unless defined(&NPPN_SHUTDOWN);
    eval 'sub NPPN_BUFFERACTIVATED () {( &NPPN_FIRST + 10);}' unless defined(&NPPN_BUFFERACTIVATED);
    eval 'sub NPPN_LANGCHANGED () {( &NPPN_FIRST + 11);}' unless defined(&NPPN_LANGCHANGED);
    eval 'sub NPPN_WORDSTYLESUPDATED () {( &NPPN_FIRST + 12);}' unless defined(&NPPN_WORDSTYLESUPDATED);
    eval 'sub NPPN_SHORTCUTREMAPPED () {( &NPPN_FIRST + 13);}' unless defined(&NPPN_SHORTCUTREMAPPED);
    eval 'sub NPPN_FILEBEFORELOAD () {( &NPPN_FIRST + 14);}' unless defined(&NPPN_FILEBEFORELOAD);
    eval 'sub NPPN_FILELOADFAILED () {( &NPPN_FIRST + 15);}' unless defined(&NPPN_FILELOADFAILED);
    eval 'sub NPPN_READONLYCHANGED () {( &NPPN_FIRST + 16);}' unless defined(&NPPN_READONLYCHANGED);
    eval 'sub DOCSTATUS_READONLY () {1;}' unless defined(&DOCSTATUS_READONLY);
    eval 'sub DOCSTATUS_BUFFERDIRTY () {2;}' unless defined(&DOCSTATUS_BUFFERDIRTY);
    eval 'sub NPPN_DOCORDERCHANGED () {( &NPPN_FIRST + 17);}' unless defined(&NPPN_DOCORDERCHANGED);
    eval 'sub NPPN_SNAPSHOTDIRTYFILELOADED () {( &NPPN_FIRST + 18);}' unless defined(&NPPN_SNAPSHOTDIRTYFILELOADED);
    eval 'sub NPPN_BEFORESHUTDOWN () {( &NPPN_FIRST + 19);}' unless defined(&NPPN_BEFORESHUTDOWN);
    eval 'sub NPPN_CANCELSHUTDOWN () {( &NPPN_FIRST + 20);}' unless defined(&NPPN_CANCELSHUTDOWN);
    eval 'sub NPPN_FILEBEFORERENAME () {( &NPPN_FIRST + 21);}' unless defined(&NPPN_FILEBEFORERENAME);
    eval 'sub NPPN_FILERENAMECANCEL () {( &NPPN_FIRST + 22);}' unless defined(&NPPN_FILERENAMECANCEL);
    eval 'sub NPPN_FILERENAMED () {( &NPPN_FIRST + 23);}' unless defined(&NPPN_FILERENAMED);
    eval 'sub NPPN_FILEBEFOREDELETE () {( &NPPN_FIRST + 24);}' unless defined(&NPPN_FILEBEFOREDELETE);
    eval 'sub NPPN_FILEDELETEFAILED () {( &NPPN_FIRST + 25);}' unless defined(&NPPN_FILEDELETEFAILED);
    eval 'sub NPPN_FILEDELETED () {( &NPPN_FIRST + 26);}' unless defined(&NPPN_FILEDELETED);
}
1;
